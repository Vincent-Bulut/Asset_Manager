Pour implémenter un script VBA qui utilise Power Query pour filtrer les lignes d'un fichier CSV basé sur une liste de valeurs acceptables pour une colonne et restituer les données dans Excel, vous pouvez suivre ces étapes :

1. **Définir le fichier CSV et la feuille de destination**.
2. **Créer une requête Power Query pour importer le CSV**.
3. **Appliquer un filtre basé sur une liste de valeurs**.
4. **Charger le résultat dans une feuille Excel**.

Voici un exemple complet pour accomplir cette tâche :

### 1. Préparation de la liste des valeurs acceptables

Supposons que vous avez une feuille appelée "ValeursAcceptables" avec les valeurs acceptables listées dans la colonne A.

### 2. Script VBA

Voici le script VBA complet pour accomplir cette tâche :

```vba
Sub ImportAndFilterCSV()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim csvFilePath As String
    Dim acceptableValuesRange As Range
    Dim acceptableValues As String
    Dim lastRow As Long

    ' Définir le chemin du fichier CSV
    csvFilePath = "C:\path\to\your\file.csv"
    
    ' Définir la feuille où les résultats seront chargés
    Set wb = ThisWorkbook
    Set ws = wb.Sheets("Résultats")
    
    ' Effacer les anciennes données
    ws.Cells.Clear
    
    ' Définir la plage des valeurs acceptables
    With wb.Sheets("ValeursAcceptables")
        lastRow = .Cells(.Rows.Count, 1).End(xlUp).Row
        Set acceptableValuesRange = .Range("A1:A" & lastRow)
    End With
    
    ' Convertir la plage de valeurs acceptables en une liste séparée par des virgules
    acceptableValues = Join(Application.Transpose(acceptableValuesRange.Value), ",")

    ' Créer une requête Power Query pour importer et filtrer le CSV
    With ActiveWorkbook.Queries
        .Add Name:="FilteredCSV", Formula:= _
            "let" & vbCrLf & _
            "    Source = Csv.Document(File.Contents(""" & csvFilePath & """),[Delimiter="","", Columns=YourNumberOfColumns, Encoding=1252, QuoteStyle=QuoteStyle.None])," & vbCrLf & _
            "    FilteredRows = Table.SelectRows(Source, each List.Contains({" & acceptableValues & "}, [YourColumnName]))" & vbCrLf & _
            "in" & vbCrLf & _
            "    FilteredRows"
    End With

    ' Charger la requête dans une nouvelle feuille
    With ActiveWorkbook
        .Connections.Add2 "FilteredCSV", "", "OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=FilteredCSV;Extended Properties="""""", 6
        With .Sheets("Résultats").ListObjects.Add(SourceType:=0, Source:="OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=FilteredCSV;Extended Properties=""""", Destination:=ws.Range("A1"))
            .Name = "FilteredCSV"
            .TableStyle = "TableStyleMedium2"
        End With
    End With
    
    ' Actualiser la table pour obtenir les données
    ws.ListObjects("FilteredCSV").Refresh
    
    MsgBox "Données filtrées importées avec succès !"
End Sub
```

### Instructions

1. **Chemin du fichier CSV** : Assurez-vous de définir `csvFilePath` avec le chemin correct de votre fichier CSV.
2. **Nom de la colonne à filtrer** : Remplacez `YourColumnName` par le nom de la colonne que vous souhaitez filtrer.
3. **Nombre de colonnes** : Remplacez `YourNumberOfColumns` par le nombre de colonnes dans votre fichier CSV.

### Notes supplémentaires

- Assurez-vous que les valeurs dans la plage `acceptableValuesRange` sont formatées correctement et correspondent exactement aux valeurs dans la colonne à filtrer.
- La requête Power Query crée une connexion dans le classeur et charge les résultats dans la feuille "Résultats".
- Vous devez adapter le script en fonction de la structure réelle de votre CSV et de la colonne que vous souhaitez filtrer.