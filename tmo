
<script>
  import { onMount } from 'svelte';

  let iframeRef; // Référence à l'iframe
  let iframeContent = ''; // Contenu récupéré via l'API
  let sourceApiUrl = '/api/get-html/13'; // URL de l'API GET pour récupérer le contenu HTML

  // Fonction pour récupérer le contenu HTML via une API
  const fetchHtmlFromApi = async () => {
    try {
      const response = await fetch(sourceApiUrl);
      if (!response.ok) {
        throw new Error('Erreur lors de la récupération du contenu HTML');
      }

      iframeContent = await response.text(); // Récupérer le HTML en tant que texte
      injectContentIntoIframe(iframeContent); // Injecter dans l'iframe
    } catch (error) {
      console.error('Erreur:', error);
    }
  };

  // Fonction pour injecter le contenu dans l'iframe
  const injectContentIntoIframe = (content) => {
    if (iframeRef && iframeRef.contentDocument) {
      const iframeDoc = iframeRef.contentDocument;
      iframeDoc.open(); // Ouvrir le document de l'iframe
      iframeDoc.write(content); // Écrire le contenu HTML
      iframeDoc.close(); // Fermer le document
    } else {
      console.error('Impossible d\'accéder au document de l\'iframe');
    }
  };

  // Appeler l'API au montage du composant
  onMount(fetchHtmlFromApi);
</script>

<template>
  <div class="iframe-container">
    <iframe
      bind:this={iframeRef}
      title="Integrated form"
      style="width: 100%; height: 500px; border: 1px solid #ccc;"
    ></iframe>

    <!-- Bouton pour recharger manuellement le contenu -->
    <button on:click={fetchHtmlFromApi}>Recharger le contenu via l'API</button>

    <!-- Affichage du contenu récupéré (optionnel) -->
    {#if iframeContent}
      <h3>Contenu récupéré :</h3>
      <pre>{iframeContent}</pre>
    {/if}
  </div>
</template>