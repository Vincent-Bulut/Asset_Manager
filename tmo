
Sub ImportAndFilterCSV()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim csvFilePath As String
    Dim acceptableValuesRange As Range
    Dim acceptableValues As String
    Dim lastRow As Long
    Dim queryName As String
    Dim pqQuery As WorkbookQuery
    Dim i As Long
    Dim valueArray As Variant
    Dim conn As WorkbookConnection
    
    ' Définir le chemin du fichier CSV
    csvFilePath = "C:\path\to\your\file.csv"  ' Modifiez ce chemin
    
    ' Définir la feuille où les résultats seront chargés
    Set wb = ThisWorkbook
    Set ws = wb.Sheets("Résultats")  ' Assurez-vous que cette feuille existe
    
    ' Effacer les anciennes données
    ws.Cells.Clear
    
    ' Définir la plage des valeurs acceptables
    With wb.Sheets("ValeursAcceptables")
        lastRow = .Cells(.Rows.Count, 1).End(xlUp).Row
        Set acceptableValuesRange = .Range("A1:A" & lastRow)
    End With
    
    ' Convertir la plage de valeurs acceptables en une liste de chaînes entre guillemets
    valueArray = acceptableValuesRange.Value
    For i = 1 To UBound(valueArray, 1)
        valueArray(i, 1) = """" & valueArray(i, 1) & """"
    Next i
    acceptableValues = Join(Application.Transpose(valueArray), ",")
    
    ' Nom de la requête
    queryName = "FilteredCSV"
    
    ' Vérifier si la requête existe
    On Error Resume Next
    Set pqQuery = ActiveWorkbook.Queries(queryName)
    On Error GoTo 0
    
    ' Formule Power Query
    Dim pqFormula As String
    pqFormula = _
        "let" & vbCrLf & _
        "    Source = Csv.Document(File.Contents(""" & csvFilePath & """),[Delimiter="","", Columns=YourNumberOfColumns, Encoding=1252, QuoteStyle=QuoteStyle.Csv])," & vbCrLf & _
        "    RemovedTopRows = Table.Skip(Source, 3)," & vbCrLf & _
        "    PromotedHeaders = Table.PromoteHeaders(RemovedTopRows, [PromoteAllScalars=true])," & vbCrLf & _
        "    RemovedLastColumn = Table.RemoveColumns(PromotedHeaders, {Table.ColumnNames(PromotedHeaders){Table.ColumnCount(PromotedHeaders)-1}})," & vbCrLf & _
        "    FilteredRows = Table.SelectRows(RemovedLastColumn, each List.Contains({" & acceptableValues & "}, [Column7]))" & vbCrLf & _
        "in" & vbCrLf & _
        "    FilteredRows"
    
    ' Si la requête existe, mettre à jour la formule
    If Not pqQuery Is Nothing Then
        pqQuery.Formula = pqFormula
    Else
        ' Sinon, créer une nouvelle requête
        With ActiveWorkbook.Queries
            .Add Name:=queryName, Formula:=pqFormula
        End With
    End If
    
    ' Charger la requête dans une nouvelle feuille
    On Error Resume Next
    Set conn = ActiveWorkbook.Connections(queryName)
    If conn Is Nothing Then
        Set conn = ActiveWorkbook.Connections.Add2(Name:=queryName, _
                          Description:="", _
                          ConnectionString:="OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=" & queryName & ";Extended Properties=""""" _
                          CommandText:=queryName, _
                          CommandType:=xlCmdTable)
    End If
    On Error GoTo 0
    
    With ws.ListObjects.Add(SourceType:=0, Source:="OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=" & queryName & ";Extended Properties=""""", Destination:=ws.Range("A1"))
        .Name = queryName
        .TableStyle = "TableStyleMedium2"
    End With
    
    ' Actualiser la table pour obtenir les données
    ws.ListObjects(queryName).Refresh
    
    MsgBox "Données filtrées importées avec succès !"
End Sub