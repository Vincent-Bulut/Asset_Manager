
To implement a scrollable table with a vertically scrolling tbody while keeping the tfoot frozen, you can achieve this using CSS. Below is an approach to accomplish this:

HTML Structure

<div class="table-container">
  <table>
    <thead>
      <tr>
        <th>Header 1</th>
        <th>Header 2</th>
        <th>Header 3</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Data 1</td>
        <td>Data 2</td>
        <td>Data 3</td>
      </tr>
      <!-- Add more rows as needed -->
    </tbody>
    <tfoot>
      <tr>
        <td>Footer 1</td>
        <td>Footer 2</td>
        <td>Footer 3</td>
      </tr>
    </tfoot>
  </table>
</div>

CSS for Scrollable Table with Frozen tfoot

.table-container {
  height: 400px; /* Set desired height */
  overflow-y: auto;
  position: relative;
}

table {
  width: 100%;
  border-collapse: collapse;
}

thead {
  position: sticky;
  top: 0;
  background-color: #f9f9f9; /* Optional: for better visibility */
  z-index: 2;
}

tfoot {
  position: sticky;
  bottom: 0;
  background-color: #f1f1f1; /* Optional: for better visibility */
  z-index: 2;
}

td, th {
  border: 1px solid #ddd;
  padding: 8px;
  text-align: left;
}

Explanation:

	1.	position: sticky;:
	•	The thead is sticky to the top of the container when scrolling.
	•	The tfoot is sticky to the bottom of the container.
	2.	overflow-y: auto;:
	•	Enables vertical scrolling inside the .table-container.
	3.	Z-index:
	•	Ensures that the thead and tfoot stay above the scrolling content.

This setup ensures that the table footer (tfoot) remains visible at the bottom, while the body of the table scrolls vertically.