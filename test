
function removeStructures(structuresToDelete) {
    console.log('structuresToDelete', structuresToDelete);
    console.log('actual trd_alloc', trd_allocations);

    // Créer un ensemble des id_structure à supprimer
    const idsToDelete = new Set(structuresToDelete.map(structure => structure.id_structure));
    console.log('IDs to delete', idsToDelete);

    // Filtrer trd_allocations pour supprimer les éléments avec id_structure dans idsToDelete
    trd_allocations = trd_allocations.filter(allocation => !idsToDelete.has(allocation.id_structure));
    
    console.log('Updated trd_allocations', trd_allocations);
}

// Exemple d'utilisation
let trd_allocations = [
    { id_structure: 1, name: 'Allocation 1' },
    { id_structure: 2, name: 'Allocation 2' },
    { id_structure: 3, name: 'Allocation 3' }
];

let structuresToDelete = [
    { id_structure: 2, name: 'Delete 1' },
    { id_structure: 3, name: 'Delete 2' }
];

removeStructures(structuresToDelete);