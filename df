
class XMLObject:
    def __init__(self, xml_to_load, children: list | None = None):
        self.name = self._ensure_utf8(xml_to_load.attrib.get('name', None))
        self.type = self._ensure_utf8(xml_to_load.attrib.get('type', None))
        self.value = self._ensure_utf8(xml_to_load.attrib.get('value', None))
        self.description = self._ensure_utf8(xml_to_load.attrib.get('description', None))
        self.content = self._ensure_utf8_list(children if children is not None else [])

    def _ensure_utf8(self, text):
        """Forcer un texte en UTF-8."""
        if text is None:
            return None
        if isinstance(text, bytes):
            return text.decode('utf-8')
        return str(text)

    def _ensure_utf8_list(self, items):
        """Forcer une liste de textes en UTF-8."""
        return [self._ensure_utf8(item) for item in items]