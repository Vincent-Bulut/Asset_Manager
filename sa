<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Génération XML Récursive</title>
</head>
<body>
    <h1>Génération XML Dynamique (Structure Profonde)</h1>

    <!-- Exemple avec une structure imbriquée -->
    <div id="content">
        <p>Utilisateur
            <p>Nom
                <p><input type="text" value="Dupont"></p>
            </p>
            <p>Prénom
                <p><input type="text" value="Jean"></p>
            </p>
            <p>Email
                <p>
                    <select>
                        <option value="email1@example.com" selected>email1@example.com</option>
                        <option value="email2@example.com">email2@example.com</option>
                    </select>
                </p>
            </p>
        </p>
    </div>

    <button onclick="genererXML()">Générer XML</button>

    <!-- Zone d'affichage du XML -->
    <h2>Sortie XML :</h2>
    <pre id="outputXML"></pre>

    <script>
        function genererXML() {
            const content = document.getElementById("content");
            let xmlOutput = `<données>\n`;

            // Fonction récursive pour traiter les <p> imbriqués
            function traiterElement(parent) {
                const children = parent.children;

                for (let i = 0; i < children.length; i++) {
                    const child = children[i];

                    if (child.tagName === "P") {
                        // Le texte de la balise <p> devient le nom de la balise XML
                        const tagName = child.firstChild.textContent.trim();

                        // Vérifier s'il y a un input/select imbriqué
                        const input = child.querySelector("input, select");
                        if (input) {
                            const value = input.value;
                            xmlOutput += `    <${tagName}>${value}</${tagName}>\n`;
                        } else {
                            // Si pas d'input, traiter récursivement les enfants
                            xmlOutput += `    <${tagName}>\n`;
                            traiterElement(child);
                            xmlOutput += `    </${tagName}>\n`;
                        }
                    }
                }
            }

            // Démarre la récursion à partir de la div principale
            traiterElement(content);

            xmlOutput += `</données>`;

            // Affiche le XML généré
            document.getElementById("outputXML").textContent = xmlOutput;
        }
    </script>
</body>
</html>
