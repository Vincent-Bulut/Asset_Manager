
<script>
    // Fonction pour initialiser les boutons sur toutes les sections avec la classe 'repeatable'
    function initializeCloneAndRemoveButtons(selector) {
        const targetDivs = document.querySelectorAll(selector);

        targetDivs.forEach(div => {
            addButtonsIfNeeded(div, true); // Passer 'true' pour indiquer que c'est un élément original
        });
    }

    // Fonction pour ajouter les boutons nécessaires à une section
    function addButtonsIfNeeded(section, isOriginal = false) {
        // Ajouter le bouton Clone (toujours présent)
        if (!section.querySelector('.clone-btn')) {
            const cloneButton = document.createElement('button');
            cloneButton.innerHTML = '<i class="fas fa-plus"></i>'; // "+" icon
            cloneButton.className = 'clone-btn';
            cloneButton.addEventListener('click', () => cloneSection(section));
            section.prepend(cloneButton);
        }

        // Ajouter le bouton Toggle (collapse/expand)
        if (!section.querySelector('.toggle-btn')) {
            const toggleButton = document.createElement('button');
            toggleButton.innerHTML = '<i class="fas fa-minus"></i>'; // "-" icon
            toggleButton.className = 'toggle-btn';
            toggleButton.addEventListener('click', () => toggleSection(section, toggleButton));
            section.prepend(toggleButton);
        }

        // Ajouter le bouton Trash UNIQUEMENT pour les éléments clonés
        if (!isOriginal && !section.querySelector('.remove-btn')) {
            const removeButton = document.createElement('button');
            removeButton.innerHTML = '<i class="fas fa-trash"></i>'; // Trash icon
            removeButton.className = 'remove-btn';
            removeButton.addEventListener('click', () => section.remove());
            section.prepend(removeButton);
        }
    }

    // Fonction pour cloner une section
    function cloneSection(section) {
        const clone = section.cloneNode(true); // Clone complet de la section

        // Supprimer les anciens boutons pour éviter les conflits
        clone.querySelectorAll('.clone-btn, .toggle-btn, .remove-btn').forEach(button => button.remove());

        // Ajouter les boutons nécessaires au clone (avec bouton Trash activé)
        addButtonsIfNeeded(clone, false); // 'false' indique que c'est un clone

        // Insérer le clone après la section originale
        section.parentNode.insertBefore(clone, section.nextSibling);
    }

    // Fonction pour basculer l'affichage d'une section (collapse/expand)
    function toggleSection(section, toggleButton) {
        const content = Array.from(section.children).slice(2); // Ignorer les deux premiers enfants (boutons)

        content.forEach(child => {
            if (child.style.display === 'none') {
                child.style.display = ''; // Ré-afficher le contenu
                toggleButton.innerHTML = '<i class="fas fa-minus"></i>'; // Changer l'icône pour "-"
            } else {
                child.style.display = 'none'; // Masquer le contenu
                toggleButton.innerHTML = '<i class="fas fa-plus"></i>'; // Changer l'icône pour "+"
            }
        });
    }

    // Initialiser les boutons au chargement de la page
    document.addEventListener('DOMContentLoaded', () => {
        initializeCloneAndRemoveButtons('.repeatable');
    });
</script>