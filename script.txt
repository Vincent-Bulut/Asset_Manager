
from sqlalchemy.orm import Session
from sqlalchemy import select, cast, Date
from datetime import datetime

def get_active_trader_allocations(session: Session):
    today = datetime.utcnow().date()  # Date actuelle sans l'heure

    # Requête pour récupérer les TraderAllocations avec une structure active
    stmt = (
        select(TraderAllocation)
        .join(Structure, TraderAllocation.id_struct == Structure._id_structure)
        .where(cast(Structure.end_date, Date) > today)  # Convertir la string en date avant comparaison
    )

    # Exécuter la requête
    result = session.execute(stmt).scalars().all()
    
    return result  # Retourne la liste des objets TraderAllocation

# Exemple d'utilisation
session = Session()
active_allocations = get_active_trader_allocations(session)

for allocation in active_allocations:
    print(f"Trader {allocation._id_trd} - Structure {allocation.id_struct}")