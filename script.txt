
from fastapi import Depends, HTTPException, Security
from fastapi.security import OAuth2PasswordBearer

oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")

def get_current_user(ut: str = Depends(oauth2_scheme)):
    # Cette fonction devrait extraire l'UT de l'utilisateur à partir du token et le retourner.
    # Simulons que nous avons extrait l'UT et que l'utilisateur est authentifié.
    return {"authenticated_ut": "ut123"}

@router.get("/{ut}/data")
def get_business_manager_info(ut: str, current_user: dict = Depends(get_current_user)):
    if ut != current_user["authenticated_ut"]:
        raise HTTPException(status_code=403, detail="Access to the requested resource is forbidden")
    # Le reste de la logique...