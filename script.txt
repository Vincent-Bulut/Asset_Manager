
import pandas as pd
from flask import Flask, request, jsonify

app = Flask(__name__)

class PivotTableCreator:
    def __init__(self, data_itac_c, data_steve_model, data_steve_cont, data_steve_cont_np):
        self.data_itac_c = data_itac_c
        self.data_steve_model = data_steve_model
        self.data_steve_cont = data_steve_cont
        self.data_steve_cont_np = data_steve_cont_np

    def create_pivot_table(self, data, index, columns, values, aggfunc='mean'):
        pivot_table = pd.pivot_table(data, index=index, columns=columns, values=values, aggfunc=aggfunc)
        return pivot_table

    def create_itac_c_pivot(self):
        return self.create_pivot_table(self.data_itac_c, index=['index_column'], columns=['column_name'], values=['value_column'])

    def create_steve_model_pivot(self):
        return self.create_pivot_table(self.data_steve_model, index=['index_column'], columns=['column_name'], values=['value_column'])

    # Ajoutez d'autres méthodes pour chaque DataFrame si nécessaire

@app.route('/route_3', methods=['POST'])
def route_3():
    data_itac_c = pd.DataFrame(request.json['data_itac_c'])
    data_steve_model = pd.DataFrame(request.json['data_steve_model'])
    data_steve_cont = pd.DataFrame(request.json['data_steve_cont'])
    data_steve_cont_np = pd.DataFrame(request.json['data_steve_cont_np'])

    pivot_creator = PivotTableCreator(data_itac_c, data_steve_model, data_steve_cont, data_steve_cont_np)

    pivot_itac_c = pivot_creator.create_itac_c_pivot()
    pivot_steve_model = pivot_creator.create_steve_model_pivot()
    # Créez d'autres pivot tables si nécessaire

    # Convertissez les pivot tables en JSON pour les retourner dans la réponse
    response = {
        'pivot_itac_c': pivot_itac_c.to_json(),
        'pivot_steve_model': pivot_steve_model.to_json(),
        # Ajoutez d'autres pivot tables si nécessaire
    }

    return jsonify(response)

if __name__ == '__main__':
    app.run(debug=True)