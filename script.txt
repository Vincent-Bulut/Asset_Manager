
import pandas as pd
from sqlalchemy import create_engine

# Lire le fichier Excel
fichier_excel = 'chemin/vers/ton/fichier.xlsx'  # Ou 'chemin/vers/ton/fichier.csv' pour un CSV
df = pd.read_excel(fichier_excel)  # Ou pd.read_csv(fichier_excel) pour un CSV

# Configuration de la connexion à la base de données
DATABASE_URL = "postgresql+psycopg2://user:password@host:port/database"
engine = create_engine(DATABASE_URL)

# Si votre table n'existe pas, pandas peut la créer pour vous lors de l'importation. Assurez-vous que les types de données dans le DataFrame correspondent à ce que vous attendez dans PostgreSQL.

df.to_sql('nom_de_ta_table', engine, if_exists='append', index=False)  # 'append' ajoute les données à une table existante, 'replace' pour remplacer la table

# Si votre table n'existe pas, pandas peut la créer pour vous lors de l'importation. Assurez-vous que les types de données dans le DataFrame correspondent à ce que vous attendez dans PostgreSQL.
```

Utilisez la fonction `to_sql` de pandas pour importer votre DataFrame dans la base de données PostgreSQL. Si la table n'existe pas, elle sera créée.

### Notes
- `if_exists='append'` ajoute les données à une table existante sans supprimer les données existantes. Si la table n'existe pas, elle sera créée. Utilisez `if_exists='replace'` si vous souhaitez supprimer la table existante et la recréer.
- `index=False` signifie que l'index du DataFrame ne sera pas écrit dans la base de données. Si votre table a besoin d'un index, assurez-vous de le gérer correctement.

Ce code établit la connexion avec votre base de données PostgreSQL et importe les données du fichier Excel (ou CSV) directement dans la table spécifiée. Assurez-vous que les noms de colonnes dans votre fichier Excel correspondent aux noms de colonnes dans la table PostgreSQL.