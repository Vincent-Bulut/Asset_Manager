
import pandas as pd

# Exemple de dataframe
data = {
    'Key': ['A', 'A', 'A', 'B', 'B', 'B'],
    'montants': [100, -50, 200, -150, 300, 50],
    'montant à corriger': [0, 0, 0, 0, 0, 0]
}

df = pd.DataFrame(data)

def corriger_montants(df):
    keys = df['Key'].unique()

    for key in keys:
        # Sélectionner les données pour la clé actuelle
        key_df = df[df['Key'] == key]
        
        # Tant qu'il y a des montants négatifs dans cette clé
        while (key_df['montants'] < 0).any():
            # Récupérer l'index du montant négatif le plus grand en valeur absolue
            idx_neg = key_df[key_df['montants'] < 0]['montants'].idxmin()
            montant_neg = key_df.loc[idx_neg, 'montants']
            
            # Trouver le maximum des montants positifs restants
            montants_pos = key_df[key_df['montants'] > 0]
            if not montants_pos.empty:
                idx_pos = montants_pos['montants'].idxmax()
                montant_max_pos = key_df.loc[idx_pos, 'montants']
                
                # Calculer la nouvelle valeur pour le montant négatif et le maximum positif
                new_montant_neg = montant_neg + montant_max_pos
                if new_montant_neg <= 0:
                    key_df.loc[idx_neg, 'montants'] = new_montant_neg
                    key_df.loc[idx_pos, 'montants'] = 0
                    key_df.loc[idx_neg, 'montant à corriger'] += montant_max_pos
                else:
                    key_df.loc[idx_neg, 'montants'] = 0
                    key_df.loc[idx_pos, 'montants'] -= -montant_neg
                    key_df.loc[idx_neg, 'montant à corriger'] += -montant_neg
            
            df.update(key_df)
    
    return df

# Appliquer la fonction
df_corrigé = corriger_montants(df)
print(df_corrigé)